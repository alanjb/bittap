{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nvar AuthSdkError = require('./errors/AuthSdkError'); // storage must have getItem and setItem\n\n\nfunction storageBuilder(webstorage, storageName) {\n  if (typeof storageName !== 'string' || !storageName.length) {\n    throw new AuthSdkError('\"storageName\" is required');\n  }\n\n  function getStorage() {\n    var storageString = webstorage.getItem(storageName);\n    storageString = storageString || '{}';\n\n    try {\n      return JSON.parse(storageString);\n    } catch (e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + storageName);\n    }\n  }\n\n  function setStorage(storage) {\n    try {\n      var storageString = JSON.stringify(storage);\n      webstorage.setItem(storageName, storageString);\n    } catch (e) {\n      throw new AuthSdkError('Unable to set storage: ' + storageName);\n    }\n  }\n\n  function clearStorage(key) {\n    if (!key) {\n      setStorage({});\n    }\n\n    var storage = getStorage();\n    delete storage[key];\n    setStorage(storage);\n  }\n\n  function updateStorage(key, value) {\n    var storage = getStorage();\n    storage[key] = value;\n    setStorage(storage);\n  }\n\n  return {\n    getStorage: getStorage,\n    setStorage: setStorage,\n    clearStorage: clearStorage,\n    updateStorage: updateStorage\n  };\n}\n\nmodule.exports = storageBuilder;","map":{"version":3,"sources":["/Users/alanboyce/dev/bittap/ui/node_modules/@okta/okta-auth-js/lib/storageBuilder.js"],"names":["AuthSdkError","require","storageBuilder","webstorage","storageName","length","getStorage","storageString","getItem","JSON","parse","e","setStorage","storage","stringify","setItem","clearStorage","key","updateStorage","value","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAaA,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA1B,C,CAEA;;;AACA,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,WAApC,EAAiD;AAC/C,MAAI,OAAOA,WAAP,KAAuB,QAAvB,IAAmC,CAACA,WAAW,CAACC,MAApD,EAA4D;AAC1D,UAAM,IAAIL,YAAJ,CAAiB,2BAAjB,CAAN;AACD;;AAED,WAASM,UAAT,GAAsB;AACpB,QAAIC,aAAa,GAAGJ,UAAU,CAACK,OAAX,CAAmBJ,WAAnB,CAApB;AACAG,IAAAA,aAAa,GAAGA,aAAa,IAAI,IAAjC;;AACA,QAAI;AACF,aAAOE,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAP;AACD,KAFD,CAEE,OAAMI,CAAN,EAAS;AACT,YAAM,IAAIX,YAAJ,CAAiB,qCAAqCI,WAAtD,CAAN;AACD;AACF;;AAED,WAASQ,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,QAAI;AACF,UAAIN,aAAa,GAAGE,IAAI,CAACK,SAAL,CAAeD,OAAf,CAApB;AACAV,MAAAA,UAAU,CAACY,OAAX,CAAmBX,WAAnB,EAAgCG,aAAhC;AACD,KAHD,CAGE,OAAMI,CAAN,EAAS;AACT,YAAM,IAAIX,YAAJ,CAAiB,4BAA4BI,WAA7C,CAAN;AACD;AACF;;AAED,WAASY,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAI,CAACA,GAAL,EAAU;AACRL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AACD,QAAIC,OAAO,GAAGP,UAAU,EAAxB;AACA,WAAOO,OAAO,CAACI,GAAD,CAAd;AACAL,IAAAA,UAAU,CAACC,OAAD,CAAV;AACD;;AAED,WAASK,aAAT,CAAuBD,GAAvB,EAA4BE,KAA5B,EAAmC;AACjC,QAAIN,OAAO,GAAGP,UAAU,EAAxB;AACAO,IAAAA,OAAO,CAACI,GAAD,CAAP,GAAeE,KAAf;AACAP,IAAAA,UAAU,CAACC,OAAD,CAAV;AACD;;AAED,SAAO;AACLP,IAAAA,UAAU,EAAEA,UADP;AAELM,IAAAA,UAAU,EAAEA,UAFP;AAGLI,IAAAA,YAAY,EAAEA,YAHT;AAILE,IAAAA,aAAa,EAAEA;AAJV,GAAP;AAMD;;AAEDE,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nvar AuthSdkError = require('./errors/AuthSdkError');\n\n// storage must have getItem and setItem\nfunction storageBuilder(webstorage, storageName) {\n  if (typeof storageName !== 'string' || !storageName.length) {\n    throw new AuthSdkError('\"storageName\" is required');\n  }\n\n  function getStorage() {\n    var storageString = webstorage.getItem(storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + storageName);\n    }\n  }\n\n  function setStorage(storage) {\n    try {\n      var storageString = JSON.stringify(storage);\n      webstorage.setItem(storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + storageName);\n    }\n  }\n\n  function clearStorage(key) {\n    if (!key) {\n      setStorage({});\n    }\n    var storage = getStorage();\n    delete storage[key];\n    setStorage(storage);\n  }\n\n  function updateStorage(key, value) {\n    var storage = getStorage();\n    storage[key] = value;\n    setStorage(storage);\n  }\n\n  return {\n    getStorage: getStorage,\n    setStorage: setStorage,\n    clearStorage: clearStorage,\n    updateStorage: updateStorage\n  };\n}\n\nmodule.exports = storageBuilder;\n"]},"metadata":{},"sourceType":"script"}