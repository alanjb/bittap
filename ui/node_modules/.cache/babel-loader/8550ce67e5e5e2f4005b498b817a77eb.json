{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\n\n/* eslint-disable max-statements */\nrequire('../vendor/polyfills');\n\nvar AuthSdkError = require('../errors/AuthSdkError');\n\nvar builderUtil = require('../builderUtil');\n\nvar config = require('../config');\n\nvar cookies = require('./browserStorage').storage;\n\nvar http = require('../http');\n\nvar oauthUtil = require('../oauthUtil');\n\nvar Q = require('q');\n\nvar session = require('../session');\n\nvar token = require('../token');\n\nvar TokenManager = require('../TokenManager');\n\nvar tx = require('../tx');\n\nvar util = require('../util');\n\nfunction OktaAuthBuilder(args) {\n  var sdk = this;\n  var url = builderUtil.getValidUrl(args); // OKTA-242989: support for grantType will be removed in 3.0 \n\n  var usePKCE = args.pkce || args.grantType === 'authorization_code';\n  this.options = {\n    url: util.removeTrailingSlash(url),\n    clientId: args.clientId,\n    issuer: util.removeTrailingSlash(args.issuer),\n    authorizeUrl: util.removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: util.removeTrailingSlash(args.userinfoUrl),\n    tokenUrl: util.removeTrailingSlash(args.tokenUrl),\n    pkce: usePKCE,\n    redirectUri: args.redirectUri,\n    httpRequestClient: args.httpRequestClient,\n    storageUtil: args.storageUtil,\n    transformErrorXHR: args.transformErrorXHR,\n    headers: args.headers\n  };\n\n  if (this.options.pkce && !sdk.features.isPKCESupported()) {\n    throw new AuthSdkError('This browser doesn\\'t support PKCE');\n  }\n\n  this.userAgent = 'okta-auth-js-' + config.SDK_VERSION; // Digital clocks will drift over time, so the server\n  // can misalign with the time reported by the browser.\n  // The maxClockSkew allows relaxing the time-based\n  // validation of tokens (in seconds, not milliseconds).\n  // It currently defaults to 300, because 5 min is the\n  // default maximum tolerance allowed by Kerberos.\n  // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n\n  if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n    this.options.maxClockSkew = config.DEFAULT_MAX_CLOCK_SKEW;\n  } else {\n    this.options.maxClockSkew = args.maxClockSkew;\n  } // Give the developer the ability to disable token signature\n  // validation.\n\n\n  this.options.ignoreSignature = !!args.ignoreSignature;\n  sdk.session = {\n    close: util.bind(session.closeSession, null, sdk),\n    exists: util.bind(session.sessionExists, null, sdk),\n    get: util.bind(session.getSession, null, sdk),\n    refresh: util.bind(session.refreshSession, null, sdk),\n    setCookieAndRedirect: util.bind(session.setCookieAndRedirect, null, sdk)\n  };\n  sdk.tx = {\n    status: util.bind(tx.transactionStatus, null, sdk),\n    resume: util.bind(tx.resumeTransaction, null, sdk),\n    exists: util.bind(tx.transactionExists, null, sdk),\n    introspect: util.bind(tx.introspect, null, sdk)\n  }; // This is exposed so we can mock document.cookie in our tests\n\n  sdk.tx.exists._get = function (name) {\n    return cookies.get(name);\n  }; // This is exposed so we can mock window.location.href in our tests\n\n\n  sdk.idToken = {\n    authorize: {\n      _getLocationHref: function () {\n        return window.location.href;\n      }\n    }\n  };\n  sdk.token = {\n    getWithoutPrompt: util.bind(token.getWithoutPrompt, null, sdk),\n    getWithPopup: util.bind(token.getWithPopup, null, sdk),\n    getWithRedirect: util.bind(token.getWithRedirect, null, sdk),\n    parseFromUrl: util.bind(token.parseFromUrl, null, sdk),\n    decode: token.decodeToken,\n    renew: util.bind(token.renewToken, null, sdk),\n    getUserInfo: util.bind(token.getUserInfo, null, sdk),\n    verify: util.bind(token.verifyToken, null, sdk)\n  }; // This is exposed so we can set window.location in our tests\n\n  sdk.token.getWithRedirect._setLocation = function (url) {\n    window.location = url;\n  }; // This is exposed so we can mock getting window.history in our tests\n\n\n  sdk.token.parseFromUrl._getHistory = function () {\n    return window.history;\n  }; // This is exposed so we can mock getting window.location in our tests\n\n\n  sdk.token.parseFromUrl._getLocation = function () {\n    return window.location;\n  }; // This is exposed so we can mock getting window.document in our tests\n\n\n  sdk.token.parseFromUrl._getDocument = function () {\n    return window.document;\n  };\n\n  sdk.fingerprint._getUserAgent = function () {\n    return navigator.userAgent;\n  };\n\n  var isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\n\n  sdk.features.isFingerprintSupported = function () {\n    var agent = sdk.fingerprint._getUserAgent();\n\n    return agent && !isWindowsPhone.test(agent);\n  };\n\n  sdk.tokenManager = new TokenManager(sdk, args.tokenManager);\n}\n\nvar proto = OktaAuthBuilder.prototype;\nproto.features = {};\n\nproto.features.isPopupPostMessageSupported = function () {\n  var isIE8or9 = document.documentMode && document.documentMode < 10;\n\n  if (window.postMessage && !isIE8or9) {\n    return true;\n  }\n\n  return false;\n};\n\nproto.features.isTokenVerifySupported = function () {\n  return typeof crypto !== 'undefined' && crypto.subtle && typeof Uint8Array !== 'undefined';\n};\n\nproto.features.isPKCESupported = function () {\n  return proto.features.isTokenVerifySupported();\n}; // { username, password, (relayState), (context) }\n\n\nproto.signIn = function (opts) {\n  var sdk = this;\n  opts = util.clone(opts || {});\n\n  function postToTransaction(options) {\n    delete opts.sendFingerprint;\n    return tx.postToTransaction(sdk, '/api/v1/authn', opts, options);\n  }\n\n  if (!opts.sendFingerprint) {\n    return postToTransaction();\n  }\n\n  return sdk.fingerprint().then(function (fingerprint) {\n    return postToTransaction({\n      headers: {\n        'X-Device-Fingerprint': fingerprint\n      }\n    });\n  });\n};\n\nproto.signOut = function () {\n  return this.session.close();\n};\n\nbuilderUtil.addSharedPrototypes(proto); // { resource, (rel), (requestContext)}\n\nproto.webfinger = function (opts) {\n  var url = '/.well-known/webfinger' + util.toQueryParams(opts);\n  var options = {\n    headers: {\n      'Accept': 'application/jrd+json'\n    }\n  };\n  return http.get(this, url, options);\n};\n\nproto.fingerprint = function (options) {\n  options = options || {};\n  var sdk = this;\n\n  if (!sdk.features.isFingerprintSupported()) {\n    return Q.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var deferred = Q.defer();\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n\n  function listener(e) {\n    if (!e || !e.data || e.origin !== sdk.options.url) {\n      return;\n    }\n\n    try {\n      var msg = JSON.parse(e.data);\n    } catch (err) {\n      return deferred.reject(new AuthSdkError('Unable to parse iframe response'));\n    }\n\n    if (!msg) {\n      return;\n    }\n\n    if (msg.type === 'FingerprintAvailable') {\n      return deferred.resolve(msg.fingerprint);\n    }\n\n    if (msg.type === 'FingerprintServiceReady') {\n      e.source.postMessage(JSON.stringify({\n        type: 'GetFingerprint'\n      }), e.origin);\n    }\n  }\n\n  oauthUtil.addListener(window, 'message', listener);\n  iframe.src = sdk.options.url + '/auth/services/devicefingerprint';\n  document.body.appendChild(iframe);\n  var timeout = setTimeout(function () {\n    deferred.reject(new AuthSdkError('Fingerprinting timed out'));\n  }, options.timeout || 15000);\n  return deferred.promise.fin(function () {\n    clearTimeout(timeout);\n    oauthUtil.removeListener(window, 'message', listener);\n\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n};\n\nmodule.exports = builderUtil.buildOktaAuth(OktaAuthBuilder);","map":{"version":3,"sources":["/Users/alanboyce/dev/bittap/ui/node_modules/@okta/okta-auth-js/lib/browser/browser.js"],"names":["require","AuthSdkError","builderUtil","config","cookies","storage","http","oauthUtil","Q","session","token","TokenManager","tx","util","OktaAuthBuilder","args","sdk","url","getValidUrl","usePKCE","pkce","grantType","options","removeTrailingSlash","clientId","issuer","authorizeUrl","userinfoUrl","tokenUrl","redirectUri","httpRequestClient","storageUtil","transformErrorXHR","headers","features","isPKCESupported","userAgent","SDK_VERSION","maxClockSkew","DEFAULT_MAX_CLOCK_SKEW","ignoreSignature","close","bind","closeSession","exists","sessionExists","get","getSession","refresh","refreshSession","setCookieAndRedirect","status","transactionStatus","resume","resumeTransaction","transactionExists","introspect","_get","name","idToken","authorize","_getLocationHref","window","location","href","getWithoutPrompt","getWithPopup","getWithRedirect","parseFromUrl","decode","decodeToken","renew","renewToken","getUserInfo","verify","verifyToken","_setLocation","_getHistory","history","_getLocation","_getDocument","document","fingerprint","_getUserAgent","navigator","isWindowsPhone","isFingerprintSupported","agent","test","tokenManager","proto","prototype","isPopupPostMessageSupported","isIE8or9","documentMode","postMessage","isTokenVerifySupported","crypto","subtle","Uint8Array","signIn","opts","clone","postToTransaction","sendFingerprint","then","signOut","addSharedPrototypes","webfinger","toQueryParams","reject","deferred","defer","iframe","createElement","style","display","listener","e","data","origin","msg","JSON","parse","err","type","resolve","source","stringify","addListener","src","body","appendChild","timeout","setTimeout","promise","fin","clearTimeout","removeListener","contains","parentElement","removeChild","module","exports","buildOktaAuth"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint-disable complexity */\n/* eslint-disable max-statements */\n\nrequire('../vendor/polyfills');\n\nvar AuthSdkError      = require('../errors/AuthSdkError');\nvar builderUtil       = require('../builderUtil');\nvar config            = require('../config');\nvar cookies           = require('./browserStorage').storage;\nvar http              = require('../http');\nvar oauthUtil         = require('../oauthUtil');\nvar Q                 = require('q');\nvar session           = require('../session');\nvar token             = require('../token');\nvar TokenManager      = require('../TokenManager');\nvar tx                = require('../tx');\nvar util              = require('../util');\n\nfunction OktaAuthBuilder(args) {\n  var sdk = this;\n\n  var url = builderUtil.getValidUrl(args);\n  // OKTA-242989: support for grantType will be removed in 3.0 \n  var usePKCE = args.pkce || args.grantType === 'authorization_code';\n  this.options = {\n    url: util.removeTrailingSlash(url),\n    clientId: args.clientId,\n    issuer: util.removeTrailingSlash(args.issuer),\n    authorizeUrl: util.removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: util.removeTrailingSlash(args.userinfoUrl),\n    tokenUrl: util.removeTrailingSlash(args.tokenUrl),\n    pkce: usePKCE,\n    redirectUri: args.redirectUri,\n    httpRequestClient: args.httpRequestClient,\n    storageUtil: args.storageUtil,\n    transformErrorXHR: args.transformErrorXHR,\n    headers: args.headers\n  };\n\n  if (this.options.pkce && !sdk.features.isPKCESupported()) {\n    throw new AuthSdkError('This browser doesn\\'t support PKCE');\n  }\n\n  this.userAgent = 'okta-auth-js-' + config.SDK_VERSION;\n\n  // Digital clocks will drift over time, so the server\n  // can misalign with the time reported by the browser.\n  // The maxClockSkew allows relaxing the time-based\n  // validation of tokens (in seconds, not milliseconds).\n  // It currently defaults to 300, because 5 min is the\n  // default maximum tolerance allowed by Kerberos.\n  // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n  if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n    this.options.maxClockSkew = config.DEFAULT_MAX_CLOCK_SKEW;\n  } else {\n    this.options.maxClockSkew = args.maxClockSkew;\n  }\n\n  // Give the developer the ability to disable token signature\n  // validation.\n  this.options.ignoreSignature = !!args.ignoreSignature;\n\n  sdk.session = {\n    close: util.bind(session.closeSession, null, sdk),\n    exists: util.bind(session.sessionExists, null, sdk),\n    get: util.bind(session.getSession, null, sdk),\n    refresh: util.bind(session.refreshSession, null, sdk),\n    setCookieAndRedirect: util.bind(session.setCookieAndRedirect, null, sdk)\n  };\n\n  sdk.tx = {\n    status: util.bind(tx.transactionStatus, null, sdk),\n    resume: util.bind(tx.resumeTransaction, null, sdk),\n    exists: util.bind(tx.transactionExists, null, sdk),\n    introspect: util.bind(tx.introspect, null, sdk)\n  };\n\n  // This is exposed so we can mock document.cookie in our tests\n  sdk.tx.exists._get = function(name) {\n    return cookies.get(name);\n  };\n\n  // This is exposed so we can mock window.location.href in our tests\n  sdk.idToken = {\n    authorize: {\n      _getLocationHref: function() {\n        return window.location.href;\n      }\n    }\n  };\n\n  sdk.token = {\n    getWithoutPrompt: util.bind(token.getWithoutPrompt, null, sdk),\n    getWithPopup: util.bind(token.getWithPopup, null, sdk),\n    getWithRedirect: util.bind(token.getWithRedirect, null, sdk),\n    parseFromUrl: util.bind(token.parseFromUrl, null, sdk),\n    decode: token.decodeToken,\n    renew: util.bind(token.renewToken, null, sdk),\n    getUserInfo: util.bind(token.getUserInfo, null, sdk),\n    verify: util.bind(token.verifyToken, null, sdk)\n  };\n\n  // This is exposed so we can set window.location in our tests\n  sdk.token.getWithRedirect._setLocation = function(url) {\n    window.location = url;\n  };\n\n  // This is exposed so we can mock getting window.history in our tests\n  sdk.token.parseFromUrl._getHistory = function() {\n    return window.history;\n  };\n\n  // This is exposed so we can mock getting window.location in our tests\n  sdk.token.parseFromUrl._getLocation = function() {\n    return window.location;\n  };\n\n  // This is exposed so we can mock getting window.document in our tests\n  sdk.token.parseFromUrl._getDocument = function() {\n    return window.document;\n  };\n\n  sdk.fingerprint._getUserAgent = function() {\n    return navigator.userAgent;\n  };\n\n  var isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\n  sdk.features.isFingerprintSupported = function() {\n    var agent = sdk.fingerprint._getUserAgent();\n    return agent && !isWindowsPhone.test(agent);\n  };\n\n  sdk.tokenManager = new TokenManager(sdk, args.tokenManager);\n}\n\nvar proto = OktaAuthBuilder.prototype;\n\nproto.features = {};\n\nproto.features.isPopupPostMessageSupported = function() {\n  var isIE8or9 = document.documentMode && document.documentMode < 10;\n  if (window.postMessage && !isIE8or9) {\n    return true;\n  }\n  return false;\n};\n\nproto.features.isTokenVerifySupported = function() {\n  return typeof crypto !== 'undefined' && crypto.subtle && typeof Uint8Array !== 'undefined';\n};\n\nproto.features.isPKCESupported = function() {\n  return proto.features.isTokenVerifySupported();\n};\n\n// { username, password, (relayState), (context) }\nproto.signIn = function (opts) {\n  var sdk = this;\n  opts = util.clone(opts || {});\n  function postToTransaction(options) {\n    delete opts.sendFingerprint;\n    return tx.postToTransaction(sdk, '/api/v1/authn', opts, options);\n  }\n  if (!opts.sendFingerprint) {\n    return postToTransaction();\n  }\n  return sdk.fingerprint()\n  .then(function(fingerprint) {\n    return postToTransaction({\n      headers: {\n        'X-Device-Fingerprint': fingerprint\n      }\n    });\n  });\n};\n\nproto.signOut = function () {\n  return this.session.close();\n};\n\nbuilderUtil.addSharedPrototypes(proto);\n\n// { resource, (rel), (requestContext)}\nproto.webfinger = function (opts) {\n  var url = '/.well-known/webfinger' + util.toQueryParams(opts);\n  var options = {\n    headers: {\n      'Accept': 'application/jrd+json'\n    }\n  };\n  return http.get(this, url, options);\n};\n\nproto.fingerprint = function(options) {\n  options = options || {};\n  var sdk = this;\n  if (!sdk.features.isFingerprintSupported()) {\n    return Q.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var deferred = Q.defer();\n\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n\n  function listener(e) {\n    if (!e || !e.data || e.origin !== sdk.options.url) {\n      return;\n    }\n\n    try {\n      var msg = JSON.parse(e.data);\n    } catch (err) {\n      return deferred.reject(new AuthSdkError('Unable to parse iframe response'));\n    }\n\n    if (!msg) { return; }\n    if (msg.type === 'FingerprintAvailable') {\n      return deferred.resolve(msg.fingerprint);\n    }\n    if (msg.type === 'FingerprintServiceReady') {\n      e.source.postMessage(JSON.stringify({\n        type: 'GetFingerprint'\n      }), e.origin);\n    }\n  }\n  oauthUtil.addListener(window, 'message', listener);\n\n  iframe.src = sdk.options.url + '/auth/services/devicefingerprint';\n  document.body.appendChild(iframe);\n\n  var timeout = setTimeout(function() {\n    deferred.reject(new AuthSdkError('Fingerprinting timed out'));\n  }, options.timeout || 15000);\n\n  return deferred.promise.fin(function() {\n    clearTimeout(timeout);\n    oauthUtil.removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  });\n};\n\nmodule.exports = builderUtil.buildOktaAuth(OktaAuthBuilder);\n"]},"metadata":{},"sourceType":"script"}