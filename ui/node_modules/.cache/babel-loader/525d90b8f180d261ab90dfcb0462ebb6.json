{"ast":null,"code":"/**\n * Check if a password is valid by matching it with a regular expression\n * @param {string} password \n * @return {boolean} false if not valid, true if valid\n */\nconst isPassword = password => {\n  const MIN_PASSWORD_LENGTH = 6;\n  const hasNumber = /\\d/;\n  let doesPasswordHaveNumber = hasNumber.test(password);\n\n  if (password.length >= MIN_PASSWORD_LENGTH && doesPasswordHaveNumber === true) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default isPassword;","map":{"version":3,"sources":["/app/src/validation/isPassword.js"],"names":["isPassword","password","MIN_PASSWORD_LENGTH","hasNumber","doesPasswordHaveNumber","test","length"],"mappings":"AAAA;;;;;AAKA,MAAMA,UAAU,GAAIC,QAAD,IAAc;AAC7B,QAAMC,mBAAmB,GAAG,CAA5B;AACA,QAAMC,SAAS,GAAG,IAAlB;AACA,MAAIC,sBAAsB,GAAGD,SAAS,CAACE,IAAV,CAAeJ,QAAf,CAA7B;;AACA,MAAGA,QAAQ,CAACK,MAAT,IAAiBJ,mBAAjB,IAAwCE,sBAAsB,KAAK,IAAtE,EAA2E;AACvE,WAAO,IAAP;AACH,GAFD,MAEM;AACF,WAAO,KAAP;AACH;AACJ,CATD;;AAWA,eAAeJ,UAAf","sourcesContent":["/**\n * Check if a password is valid by matching it with a regular expression\n * @param {string} password \n * @return {boolean} false if not valid, true if valid\n */\nconst isPassword = (password) => {\n    const MIN_PASSWORD_LENGTH = 6;\n    const hasNumber = /\\d/;\n    let doesPasswordHaveNumber = hasNumber.test(password); \n    if(password.length>=MIN_PASSWORD_LENGTH && doesPasswordHaveNumber === true){\n        return true;\n    } else{\n        return false;\n    }\n}\n\nexport default isPassword;"]},"metadata":{},"sourceType":"module"}