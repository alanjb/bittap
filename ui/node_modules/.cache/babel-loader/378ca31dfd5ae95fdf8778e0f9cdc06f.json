{"ast":null,"code":"import _objectSpread from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _temp,\n    _jsxFileName = \"/app/src/components/auth/SignIn.jsx\";\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\nimport { isEmail } from './../../validation/index';\nimport OktaAuth from '@okta/okta-auth-js';\nimport { withAuth } from '@okta/okta-react';\nexport default withAuth((_temp = class SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = googleUser => {\n      var profile = googleUser.getBasicProfile();\n      console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + profile.getName());\n      console.log('Image URL: ' + profile.getImageUrl());\n      console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      let validation;\n      this.setState(_objectSpread({}, this.state, {\n        [event.target.name]: value //setting the email state to whatever the user has inputted \n\n      })); // console.log(event.target.name + \":\" + event.target.value);\n\n      if (name === 'email') {\n        const isEmailInputValid = this.state.isEmailInputValid;\n        validation = isEmail(value); //calls validation email module\n        // this.handleValidateEmailRegister(isEmailValid); //pass into below function current state\n        // this.handleValidationText(name, validation);\n\n        if (validation === true && isEmailInputValid === false) {\n          // this is async\n          this.setState({\n            isEmailInputValid: true\n          }, function () {\n            this.handleValidationText(this.state);\n          }.bind(this));\n        }\n\n        if (validation === false && isEmailInputValid === true) {\n          // this is async\n          this.setState({\n            isEmailInputValid: false\n          }, function () {\n            this.handleValidationText(this.state);\n          }.bind(this));\n        }\n      }\n    };\n\n    this.handleValidationText = () => {\n      let validationTextClassesArray = [\"validation-text \", \"validation-text removeEmailValidation\"];\n      return validationTextClassesArray; // console.log(\"updated email validation from other function: \" + this.state.isEmailInputValid);\n    };\n\n    this.handleEnableSubmitButton = () => {\n      const isEmailInputValid = this.state.isEmailInputValid;\n\n      if (isEmailInputValid) {\n        //enable submit button if all validations pass\n        document.getElementById(\"signin-button\").removeAttribute(\"disabled\");\n      }\n    };\n\n    this.handleSubmit = async event => {\n      // console.log('submit clicked!');\n      event.preventDefault(); // create a new user object \n\n      const user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.oktaAuth.signIn({\n        user\n      }).then(res => {\n        this.setState({\n          sessionToken: res.sessionToken\n        });\n      }).catch(err => {\n        this.setState({\n          error: err.message\n        });\n        console.log(err.statusCode + ' error', err);\n      });\n      axios.post('http://localhost:8080/', user, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      isSubmitButtonEnabled: false,\n      email: \"\",\n      password: \"\",\n      isEmailInputValid: false,\n      isPasswordInputValid: false,\n      sessionToken: null,\n      error: null\n    }; // this.oktaAuth = new OktaAuth({ url: props.baseUrl });\n  }\n\n  render() {\n    const _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          password = _this$state.password,\n          email = _this$state.email,\n          isSubmitButtonEnabled = _this$state.isSubmitButtonEnabled,\n          isEmailInputValid = _this$state.isEmailInputValid;\n    let validationTextClassesArray = this.handleValidationText();\n    let validationTextClasses = validationTextClassesArray[0];\n\n    if (isEmailInputValid) {\n      validationTextClasses = validationTextClassesArray[1];\n    }\n\n    this.handleEnableSubmitButton();\n\n    if (this.state.sessionToken) {\n      this.props.auth.redirect({\n        sessionToken: this.state.sessionToken\n      });\n      return null;\n    }\n\n    const errorMessage = this.state.error ? React.createElement(\"span\", {\n      className: \"error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.error) : null;\n    return React.createElement(\"div\", {\n      className: \"SignIn-Component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, errorMessage, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Bittap\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Email Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: validationTextClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Enter a valid email\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"register-button\",\n      id: \"signin-button\",\n      color: \"primary\",\n      label: \"Register\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Don't have a Bittap account? \", React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Register here\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"g-signin2\",\n      \"data-onsuccess\": \"onSignIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sign in with Google\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp));","map":{"version":3,"sources":["/app/src/components/auth/SignIn.jsx"],"names":["React","Link","axios","Button","Container","Form","FormGroup","Input","isEmail","OktaAuth","withAuth","SignIn","Component","constructor","props","onSignIn","googleUser","profile","getBasicProfile","console","log","getId","getName","getImageUrl","getEmail","handleChange","event","value","target","name","validation","setState","state","isEmailInputValid","handleValidationText","bind","validationTextClassesArray","handleEnableSubmitButton","document","getElementById","removeAttribute","handleSubmit","preventDefault","user","email","password","oktaAuth","signIn","then","res","sessionToken","catch","err","error","message","statusCode","post","headers","data","isSubmitButtonEnabled","isPasswordInputValid","render","firstName","lastName","validationTextClasses","auth","redirect","errorMessage","e"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {Button, Container, Form, FormGroup, Input} from 'reactstrap';\nimport { isEmail }  from './../../validation/index';\nimport OktaAuth from '@okta/okta-auth-js';\nimport { withAuth } from '@okta/okta-react';\n\nexport default withAuth(\n  class SignIn extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitButtonEnabled: false,\n      email: \"\",\n      password: \"\",\n      isEmailInputValid: false,\n      isPasswordInputValid: false, \n      sessionToken: null,\n      error: null,\n    };\n    // this.oktaAuth = new OktaAuth({ url: props.baseUrl });\n  }\n\n  onSignIn = (googleUser) => {\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name= event.target.name;\n    let validation;\n    this.setState({\n      ...this.state,\n      [event.target.name]: value //setting the email state to whatever the user has inputted \n    });\n    // console.log(event.target.name + \":\" + event.target.value);\n    if(name === 'email'){\n      const {isEmailInputValid} = this.state;\n      validation = isEmail(value); //calls validation email module\n      // this.handleValidateEmailRegister(isEmailValid); //pass into below function current state\n      // this.handleValidationText(name, validation);\n      if(validation===true && isEmailInputValid===false){\n        // this is async\n        this.setState({\n          isEmailInputValid: true\n        }, function () {\n          this.handleValidationText(this.state)}.bind(this)); \n      }\n      if(validation===false && isEmailInputValid===true){\n        // this is async\n        this.setState({\n          isEmailInputValid: false\n        }, function () {\n          this.handleValidationText(this.state)}.bind(this)); \n      }\n    } \n  }\n\n  handleValidationText = () => {\n    let validationTextClassesArray = [\"validation-text \", \"validation-text removeEmailValidation\"]; \n    return validationTextClassesArray;\n    // console.log(\"updated email validation from other function: \" + this.state.isEmailInputValid);\n  }\n\n  handleEnableSubmitButton = () => {\n    const { isEmailInputValid } = this.state;\n    if(isEmailInputValid){\n      //enable submit button if all validations pass\n      document.getElementById(\"signin-button\").removeAttribute(\"disabled\");\n    }\n  }\n\n  handleSubmit = async(event) => {\n    // console.log('submit clicked!');\n    event.preventDefault();\n    // create a new user object \n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.oktaAuth\n      .signIn({\n        user\n      })\n      .then(res=>{\n        this.setState({\n          sessionToken: res.sessionToken\n        });\n      })\n      .catch(err => {\n        this.setState({ error: err.message });\n        console.log(err.statusCode + ' error', err);\n      });\n\n    axios.post('http://localhost:8080/', user, { headers: { 'Content-Type': 'application/json', }})\n    .then(res => {\n      console.log(res);\n      console.log(res.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {firstName, lastName, password, email, isSubmitButtonEnabled, isEmailInputValid} = this.state;\n    let validationTextClassesArray = this.handleValidationText();\n    let validationTextClasses = validationTextClassesArray[0];\n    if(isEmailInputValid){\n      validationTextClasses = validationTextClassesArray[1]; \n    } \n    this.handleEnableSubmitButton();\n\n    if (this.state.sessionToken) {\n      this.props.auth.redirect({ sessionToken: this.state.sessionToken });\n      return null;\n    }\n\n    const errorMessage = this.state.error ? (\n      <span className=\"error-message\">{this.state.error}</span>\n    ) : null;\n\n    return (\n      <div className=\"SignIn-Component\">\n        <Container>\n          <Form onSubmit={this.handleSubmit}>\n            {errorMessage}\n            <br/>\n            <h1 className=\"header\">Bittap</h1>\n            <br></br>\n            <FormGroup>\n              <Input type=\"email\" name=\"email\" id=\"email\" value={email} onChange={(e) => this.handleChange(e)} placeholder=\"Email Address\"/>\n              <p className={validationTextClasses}>Enter a valid email</p>\n              <br></br>\n            </FormGroup>\n            <FormGroup>\n              <Input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={(e) => this.handleChange(e)} placeholder=\"Password\"/>\n              <br></br>\n            </FormGroup>\n            <Button className=\"register-button\" id=\"signin-button\" color=\"primary\" label=\"Register\" disabled>Sign in</Button>\n            <br/>\n            <FormGroup>\n              <br></br>\n              <p className=\"text\">Don't have a Bittap account? <Link to=\"/register\">Register here</Link></p>\n              <br/>\n            </FormGroup>\n            <br/>\n            <div class=\"g-signin2\" data-onsuccess=\"onSignIn\">Sign in with Google</div>\n            <br/>\n            <br/>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n);"]},"metadata":{},"sourceType":"module"}