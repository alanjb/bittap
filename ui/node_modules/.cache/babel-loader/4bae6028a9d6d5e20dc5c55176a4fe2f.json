{"ast":null,"code":"/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar fetch = require('cross-fetch');\n/* eslint-disable complexity */\n\n\nfunction fetchRequest(method, url, args) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = headers['Content-Type'] || headers['content-type'] || ''; // JSON encode body (if appropriate)\n\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body,\n    credentials: args.withCredentials === false ? 'omit' : 'include'\n  }).then(function (response) {\n    var error = !response.ok;\n    var status = response.status;\n\n    var respHandler = function (resp) {\n      var result = {\n        responseText: resp,\n        status: status\n      };\n\n      if (error) {\n        // Throwing response object since error handling is done in http.js\n        throw result;\n      }\n\n      return result;\n    };\n\n    if (response.headers.get('Content-Type') && response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n      return response.json().then(respHandler);\n    } else {\n      return response.text().then(respHandler);\n    }\n  });\n  return fetchPromise;\n}\n\nmodule.exports = fetchRequest;","map":{"version":3,"sources":["/app/node_modules/@okta/okta-auth-js/fetch/fetchRequest.js"],"names":["fetch","require","fetchRequest","method","url","args","body","data","headers","contentType","JSON","stringify","fetchPromise","credentials","withCredentials","then","response","error","ok","status","respHandler","resp","result","responseText","get","toLowerCase","indexOf","json","text","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;AAEA;;;AACA,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACvC,MAAIC,IAAI,GAAGD,IAAI,CAACE,IAAhB;AACA,MAAIC,OAAO,GAAGH,IAAI,CAACG,OAAL,IAAgB,EAA9B;AACA,MAAIC,WAAW,GAAID,OAAO,CAAC,cAAD,CAAP,IAA2BA,OAAO,CAAC,cAAD,CAAlC,IAAsD,EAAzE,CAHuC,CAKvC;;AACA,MAAIC,WAAW,KAAK,kBAAhB,IAAsCH,IAAtC,IAA8C,OAAOA,IAAP,KAAgB,QAAlE,EAA4E;AAC1EA,IAAAA,IAAI,GAAGI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAP;AACD;;AAED,MAAIM,YAAY,GAAGZ,KAAK,CAACI,GAAD,EAAM;AAC5BD,IAAAA,MAAM,EAAEA,MADoB;AAE5BK,IAAAA,OAAO,EAAEH,IAAI,CAACG,OAFc;AAG5BF,IAAAA,IAAI,EAAEA,IAHsB;AAI5BO,IAAAA,WAAW,EAAER,IAAI,CAACS,eAAL,KAAyB,KAAzB,GAAiC,MAAjC,GAA0C;AAJ3B,GAAN,CAAL,CAMlBC,IANkB,CAMb,UAASC,QAAT,EAAmB;AACvB,QAAIC,KAAK,GAAG,CAACD,QAAQ,CAACE,EAAtB;AACA,QAAIC,MAAM,GAAGH,QAAQ,CAACG,MAAtB;;AACA,QAAIC,WAAW,GAAG,UAASC,IAAT,EAAe;AAC/B,UAAIC,MAAM,GAAG;AACXC,QAAAA,YAAY,EAAEF,IADH;AAEXF,QAAAA,MAAM,EAAEA;AAFG,OAAb;;AAIA,UAAIF,KAAJ,EAAW;AACT;AACA,cAAMK,MAAN;AACD;;AACD,aAAOA,MAAP;AACD,KAVD;;AAWA,QAAIN,QAAQ,CAACR,OAAT,CAAiBgB,GAAjB,CAAqB,cAArB,KACAR,QAAQ,CAACR,OAAT,CAAiBgB,GAAjB,CAAqB,cAArB,EAAqCC,WAArC,GAAmDC,OAAnD,CAA2D,kBAA3D,KAAkF,CADtF,EACyF;AACvF,aAAOV,QAAQ,CAACW,IAAT,GAAgBZ,IAAhB,CAAqBK,WAArB,CAAP;AACD,KAHD,MAGO;AACL,aAAOJ,QAAQ,CAACY,IAAT,GAAgBb,IAAhB,CAAqBK,WAArB,CAAP;AACD;AACF,GA1BkB,CAAnB;AA2BA,SAAOR,YAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiB5B,YAAjB","sourcesContent":["/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar fetch = require('cross-fetch');\n\n/* eslint-disable complexity */\nfunction fetchRequest(method, url, args) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  // JSON encode body (if appropriate)\n  if (contentType === 'application/json' && body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body,\n    credentials: args.withCredentials === false ? 'omit' : 'include'\n  })\n  .then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    var respHandler = function(resp) {\n      var result = {\n        responseText: resp,\n        status: status\n      };\n      if (error) {\n        // Throwing response object since error handling is done in http.js\n        throw result;\n      }\n      return result;\n    };\n    if (response.headers.get('Content-Type') &&\n        response.headers.get('Content-Type').toLowerCase().indexOf('application/json') >= 0) {\n      return response.json().then(respHandler);\n    } else {\n      return response.text().then(respHandler);\n    }\n  });\n  return fetchPromise;\n}\n\nmodule.exports = fetchRequest;\n"]},"metadata":{},"sourceType":"script"}