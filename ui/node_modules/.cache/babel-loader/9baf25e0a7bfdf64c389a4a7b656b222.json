{"ast":null,"code":"var _jsxFileName = \"/Users/alanboyce/dev/bittap/ui/src/components/dashboard/Dashboard.jsx\";\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\nimport socketIOClient from 'socket.io-client';\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport ServerCard from '../layout/ServerCard';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = googleUser => {\n      let profile = googleUser.getBasicProfile(); // console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n      // console.log('Name: ' + profile.getName());\n      // console.log('Image URL: ' + profile.getImageUrl());\n      // console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      return profile.getName();\n    };\n\n    this.state = {\n      response: false,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n  }\n\n  componentDidMount() {\n    const endpoint = this.state.endpoint;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"outgoing data\", data => this.setState({\n      response: data\n    }));\n  } // signOut() {\n  //   var auth2 = gapi.auth2.getAuthInstance();\n  //   auth2.signOut().then(function () {\n  //     console.log('User signed out.');\n  //   });\n  // }\n\n\n  onLoad() {\n    gapi.load('auth2', function () {\n      gapi.auth2.init();\n    });\n  }\n\n  // signOut = () => {\n  //   var auth2 = gapi.auth2.getAuthInstance();\n  //   auth2.signOut().then(function () {\n  //     console.log('User signed out.');\n  //   });\n  // }\n  render() {\n    const name = this.onSignIn();\n    return React.createElement(\"div\", {\n      className: \"Dashboard-Component g-signin2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Filter...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      className: \"large-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"hello, \", name)), React.createElement(ServerCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(ServerCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ServerCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/alanboyce/dev/bittap/ui/src/components/dashboard/Dashboard.jsx"],"names":["React","Link","axios","Button","Container","Form","FormGroup","Input","socketIOClient","InputGroup","InputGroupAddon","InputGroupText","ServerCard","Dashboard","Component","constructor","props","onSignIn","googleUser","profile","getBasicProfile","getName","state","response","endpoint","componentDidMount","socket","on","data","setState","onLoad","gapi","load","auth2","init","render","name"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4CC,KAA5C,QAAwD,YAAxD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,cAAtC,QAA4D,YAA5D;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,QA3BmB,GA2BPC,UAAD,IAAgB;AACzB,UAAIC,OAAO,GAAGD,UAAU,CAACE,eAAX,EAAd,CADyB,CAEzB;AACA;AACA;AACA;;AACA,aAAOD,OAAO,CAACE,OAAR,EAAP;AACH,KAlCoB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACVD,QADU,GACG,KAAKF,KADR,CACVE,QADU;AAElB,UAAME,MAAM,GAAGlB,cAAc,CAACgB,QAAD,CAA7B;AACAE,IAAAA,MAAM,CAACC,EAAP,CAAU,eAAV,EAA2BC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAEK;AAAZ,KAAd,CAAnC;AACD,GAboC,CAerC;AACA;AACA;AACA;AACA;AACA;;;AAEAE,EAAAA,MAAM,GAAG;AACTC,IAAAA,IAAI,CAACC,IAAL,CAAU,OAAV,EAAmB,YAAW;AAC1BD,MAAAA,IAAI,CAACE,KAAL,CAAWC,IAAX;AACD,KAFH;AAGC;;AAWD;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKnB,QAAL,EAAb;AACA,WACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYmB,IAAZ,CANF,CADF,EASE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADF;AAkBD;;AAhEoC;;AAmEvC,eAAevB,SAAf","sourcesContent":["import * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {Button, Container, Form, FormGroup, Input} from 'reactstrap';\nimport socketIOClient from 'socket.io-client';\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport ServerCard from '../layout/ServerCard';\n\nclass Dashboard extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: false,\n      endpoint: \"http://127.0.0.1:4001\"\n    };\n  }\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    const socket = socketIOClient(endpoint);\n    socket.on(\"outgoing data\", data => this.setState({ response: data }));\n  }\n\n  // signOut() {\n  //   var auth2 = gapi.auth2.getAuthInstance();\n  //   auth2.signOut().then(function () {\n  //     console.log('User signed out.');\n  //   });\n  // }\n\n  onLoad() {\n  gapi.load('auth2', function() {\n      gapi.auth2.init();\n    });\n  }\n\n  onSignIn = (googleUser) => {\n    let profile = googleUser.getBasicProfile();\n    // console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    // console.log('Name: ' + profile.getName());\n    // console.log('Image URL: ' + profile.getImageUrl());\n    // console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    return profile.getName();\n};\n\n  // signOut = () => {\n  //   var auth2 = gapi.auth2.getAuthInstance();\n  //   auth2.signOut().then(function () {\n  //     console.log('User signed out.');\n  //   });\n  // }\n  \n  render() {\n    const name = this.onSignIn();\n    return (\n      <div className=\"Dashboard-Component g-signin2\">\n        <Container>\n          <div>\n            <InputGroup>\n              <Input placeholder=\"Filter...\" />\n              {/* <Button color=\"primary\" size=\"lg\" active>+</Button>{' '} */}\n            </InputGroup>\n            <h1 className=\"large-header\">Dashboard</h1>\n            <h6>hello, {name}</h6>\n          </div>\n          <ServerCard/>\n          <ServerCard/>\n          <ServerCard/>\n          {/* <a href=\"#\" onclick=\"signOut();\">Sign out</a> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}