{"ast":null,"code":"/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar AuthSdkError = require('./errors/AuthSdkError');\n\nvar tx = require('./tx');\n\nvar util = require('./util');\n\nfunction getValidUrl(args) {\n  if (!args) {\n    throw new AuthSdkError('No arguments passed to constructor. ' + 'Required usage: new OktaAuth(args)');\n  }\n\n  var url = args.url;\n\n  if (!url) {\n    var isUrlRegex = new RegExp('^http?s?://.+');\n\n    if (args.issuer && isUrlRegex.test(args.issuer)) {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      url = args.issuer.split('/oauth2/')[0];\n    } else {\n      throw new AuthSdkError('No url passed to constructor. ' + 'Required usage: new OktaAuth({url: \"https://{yourOktaDomain}.com\"})');\n    }\n  }\n\n  if (url.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('URL passed to constructor contains \"-admin\" in subdomain. ' + 'Required usage: new OktaAuth({url: \"https://{yourOktaDomain}.com})');\n  }\n\n  return url;\n}\n\nfunction addSharedPrototypes(proto) {\n  // { username, (relayState) }\n  proto.forgotPassword = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }; // { username, (relayState) }\n\n\n  proto.unlockAccount = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }; // { recoveryToken }\n\n\n  proto.verifyRecoveryToken = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  };\n}\n\nfunction buildOktaAuth(OktaAuthBuilder) {\n  return function (storageUtil, httpRequestClient) {\n    function OktaAuth(args) {\n      if (!(this instanceof OktaAuth)) {\n        return new OktaAuth(args);\n      }\n\n      if (args) {\n        args.storageUtil = storageUtil;\n\n        if (args.ajaxRequest) {\n          util.deprecate('ajaxRequest is being deprecated, use httpRequestClient attribute instead.');\n          args.httpRequestClient = args.ajaxRequest;\n        } else if (!args.httpRequestClient) {\n          args.httpRequestClient = httpRequestClient;\n        }\n      }\n\n      util.bind(OktaAuthBuilder, this)(args);\n    }\n\n    OktaAuth.prototype = OktaAuthBuilder.prototype;\n    OktaAuth.prototype.constructor = OktaAuth; // Hoist feature detection functions to static type\n\n    OktaAuth.features = OktaAuthBuilder.prototype.features;\n    return OktaAuth;\n  };\n}\n\nmodule.exports = {\n  addSharedPrototypes: addSharedPrototypes,\n  buildOktaAuth: buildOktaAuth,\n  getValidUrl: getValidUrl\n};","map":{"version":3,"sources":["/Users/alanboyce/dev/bittap/ui/node_modules/@okta/okta-auth-js/lib/builderUtil.js"],"names":["AuthSdkError","require","tx","util","getValidUrl","args","url","isUrlRegex","RegExp","issuer","test","split","indexOf","addSharedPrototypes","proto","forgotPassword","opts","postToTransaction","unlockAccount","verifyRecoveryToken","buildOktaAuth","OktaAuthBuilder","storageUtil","httpRequestClient","OktaAuth","ajaxRequest","deprecate","bind","prototype","constructor","features","module","exports"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar AuthSdkError = require('./errors/AuthSdkError');\nvar tx = require('./tx');\nvar util = require('./util');\n\nfunction getValidUrl(args) {\n  if (!args) {\n    throw new AuthSdkError('No arguments passed to constructor. ' +\n      'Required usage: new OktaAuth(args)');\n  }\n\n  var url = args.url;\n  if (!url) {\n    var isUrlRegex = new RegExp('^http?s?://.+');\n    if (args.issuer && isUrlRegex.test(args.issuer)) {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      url = args.issuer.split('/oauth2/')[0];\n    } else {\n      throw new AuthSdkError('No url passed to constructor. ' +\n      'Required usage: new OktaAuth({url: \"https://{yourOktaDomain}.com\"})');\n    }\n  }\n\n  if (url.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({url: \"https://{yourOktaDomain}.com})');\n  }\n\n  return url;\n}\n\nfunction addSharedPrototypes(proto) {\n  // { username, (relayState) }\n  proto.forgotPassword = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  };\n\n  // { username, (relayState) }\n  proto.unlockAccount = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  };\n\n  // { recoveryToken }\n  proto.verifyRecoveryToken = function (opts) {\n    return tx.postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  };\n}\n\nfunction buildOktaAuth(OktaAuthBuilder) {\n  return function(storageUtil, httpRequestClient) {\n    function OktaAuth(args) {\n      if (!(this instanceof OktaAuth)) {\n        return new OktaAuth(args);\n      }\n\n      if (args) {\n        args.storageUtil = storageUtil;\n\n        if (args.ajaxRequest) {\n          util.deprecate('ajaxRequest is being deprecated, use httpRequestClient attribute instead.');\n          args.httpRequestClient = args.ajaxRequest;\n        } else if (!args.httpRequestClient) {\n          args.httpRequestClient = httpRequestClient;\n        }\n      }\n\n      util.bind(OktaAuthBuilder, this)(args);\n    }\n    OktaAuth.prototype = OktaAuthBuilder.prototype;\n    OktaAuth.prototype.constructor = OktaAuth;\n\n    // Hoist feature detection functions to static type\n    OktaAuth.features = OktaAuthBuilder.prototype.features;\n\n    return OktaAuth;\n  };\n}\n\nmodule.exports = {\n  addSharedPrototypes: addSharedPrototypes,\n  buildOktaAuth: buildOktaAuth,\n  getValidUrl: getValidUrl\n};\n"]},"metadata":{},"sourceType":"script"}